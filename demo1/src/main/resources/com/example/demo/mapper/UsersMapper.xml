<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="UserID" property="userid" jdbcType="INTEGER" />
    <result column="Username" property="username" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Role" property="role" jdbcType="CHAR" />
    <result column="DepartmentID" property="departmentid" jdbcType="INTEGER" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    UserID, Username, Password, Role, DepartmentID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from school_user
    where UserID = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectByUsername" resultType="com.example.demo.entity.Users">
    select * from school_user where Username = #{username}
  </select>
    <select id="getAllUsers" resultType="com.example.demo.entity.Users">
    select * from school_user;
    </select>
  <select id="selectdepartment" resultMap="BaseResultMap">
    select * from school_user where DepartmentID=#{departmentid}
  </select>
  <select id="getUsersByKeyword" resultType="com.example.demo.entity.Users">
    SELECT * FROM school_user WHERE Username LIKE CONCAT('%', #{keyword}, '%')
                                 OR DepartmentID IN (SELECT DepartmentID FROM departments WHERE DepartmentName LIKE CONCAT('%', #{keyword}, '%'))
                                 OR Name LIKE CONCAT('%', #{keyword}, '%')
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from school_user
    where UserID = #{userid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByUsername">
    delete from school_user where Username = #{username}
    </delete>
    <insert id="insert" parameterType="com.example.demo.entity.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into school_user (UserID, Username, Password, 
      Role, DepartmentID,Name)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{role,jdbcType=CHAR}, #{departmentid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into school_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        UserID,
      </if>
      <if test="username != null" >
        Username,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="role != null" >
        Role,
      </if>
      <if test="departmentid != null" >
        DepartmentID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=CHAR},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update school_user
    <set >
      <if test="username != null" >
        Username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        Role = #{role,jdbcType=CHAR},
      </if>
      <if test="departmentid != null" >
        DepartmentID = #{departmentid,jdbcType=INTEGER},
      </if>
    </set>
    where UserID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update school_user
    set Username = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Role = #{role,jdbcType=CHAR},
      DepartmentID = #{departmentid,jdbcType=INTEGER}
    where UserID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateRoleByUsername">
    update school_user set Role = #{role} where Username = #{username}
  </update>
  <update id="updateUser" parameterType="com.example.demo.entity.Users">
    UPDATE school_user
    SET

      Password = #{password},

      DepartmentID = #{departmentid},
      Name = #{name}
    WHERE  Username = #{username}
  </update>
</mapper>