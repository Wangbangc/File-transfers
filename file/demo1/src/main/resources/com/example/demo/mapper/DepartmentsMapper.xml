<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.DepartmentsMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="DepartmentID" property="departmentid" jdbcType="INTEGER" />
    <result column="DepartmentName" property="departmentname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    DepartmentID, DepartmentName
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from departments
    where DepartmentID = #{departmentid,jdbcType=INTEGER}
  </select>
  <select id="getAllDepartments" resultType="com.example.demo.entity.Department">
    select * from departments;
  </select>
  <select id="selectdepartment" resultMap="BaseResultMap">
    select *from  departments where  DepartmentID = #{departmentid}
  </select>
  <select id="getDepartmentsByName" resultType="com.example.demo.entity.Department">
    SELECT * FROM departments WHERE DepartmentName LIKE CONCAT('%', #{departmentName}, '%')
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from departments
    where DepartmentID = #{departmentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteDepartmentByName">
     delete from departments where DepartmentName = #{departmentName}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into departments (DepartmentID, DepartmentName)
    values (#{departmentid,jdbcType=INTEGER}, #{departmentname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into departments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="departmentid != null" >
        DepartmentID,
      </if>
      <if test="departmentname != null" >
        DepartmentName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="departmentid != null" >
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="departmentname != null" >
        #{departmentname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertDepartment">
    insert into departments (DepartmentName) values (#{departmentname})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update departments
    <set >
      <if test="departmentname != null" >
        DepartmentName = #{departmentname,jdbcType=VARCHAR},
      </if>
    </set>
    where DepartmentID = #{departmentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update departments
    set DepartmentName = #{departmentname,jdbcType=VARCHAR}
    where DepartmentID = #{departmentid,jdbcType=INTEGER}
  </update>
  <update id="updateDepartmentNameById">
    update departments set DepartmentName = #{departmentName} where DepartmentID = #{departmentId}
  </update>
</mapper>